#!/usr/bin/env node

var child_process = require('child_process');
var fs = require('fs');
var fse = require('node-fs-extra');
var argv = require('yargs').argv;
var path = require('path');
var rawhideDir = path.resolve(__dirname, '../');

// Create a standard test scenario.
if (argv._[0] === 'init') {
  if (!argv._[1]) {
    return console.error('Please specify a name');
  }
  var targetDir = `./${argv._[1]}`;

  try {
    fs.lstatSync(targetDir);
    return console.error('Directory already exists.');
  } catch (e) {}

  fs.mkdirSync(targetDir);
  fs.mkdirSync(`${targetDir}/adapters`);
  fs.mkdirSync(`${targetDir}/models`);
  fs.mkdirSync(`${targetDir}/workloads`);
  fse.copySync(`${rawhideDir}/database.json`, `${targetDir}/database.json`);
  fse.copySync(`${rawhideDir}/parameters.json`, `${targetDir}/parameters.json`);
  fse.copySync(`${rawhideDir}/adapters/MongoDBBasicAdapter.js`, `${targetDir}/adapters/MongoDBBasicAdapter.js`);
  fse.copySync(`${rawhideDir}/models/BasicModel.js`, `${targetDir}/models/BasicModel.js`);
  fse.copySync(`${rawhideDir}/workloads/BasicWorkload.js`, `${targetDir}/workloads/BasicWorkload.js`);
  fse.writeJSONSync(`${targetDir}/package.json`, {
    name: "rawhide-test-case",
    version: "0.0.0",
    author: "",
    description: "",
    scripts: {
      postinstall: "rawhide link"
    }
  });

  createSymlinkSyncToGlobal(targetDir);

  return console.log(`Initialized project ${argv._[1]}.`);
}

// Run the test case from the current directory.
// TODO: Maybe add extra checks to make sure it's
// a valid rawhide test case?
if (argv._[0] === 'run') {
  return require(`${rawhideDir}/index.js`);
}

// Create a symlink in the current project to the
// rawhide framework.
if (argv._[0] === 'link') {
  createSymlinkSyncToGlobal('./');

  return console.log('Linked the Rawhide project into your node_modules directory');
}

console.log('No arguments specified');

// Cherry picked from https://github.com/npm/npm/blob/master/lib/utils/link.js
function createSymlinkSyncToGlobal(to) {
  var target, fromDir;

  try {
    fs.lstatSync(path.resolve(to, './package.json'));
  } catch (e) {
    throw 'No ./package.json file found in current working directory.';
  }

  fse.mkdirsSync(path.resolve(to, './node_modules'));

  fromDir = target = rawhideDir;
  to = path.resolve(to, './node_modules/rawhide');

  if (process.platform !== 'win32') {

    // junctions on windows must be absolute
    target = path.relative(path.dirname(to), fromDir);

    // if there is no folder in common, then it will be much
    // longer, and using a relative link is dumb.
    if (target.length >= fromDir.length) {
      target = fromDir;
    }
  }

  if (fs.existsSync(to)) {
    fs.unlinkSync(to);
  }
  fs.symlinkSync(target, to, 'junction');
}